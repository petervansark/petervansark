*{margin:0;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html{font-size:100%;font-family:monaco,Consolas,Lucida Console,monospace}body{overflow-x:hidden}section#slide{-webkit-transition:all .8s ease;transition:all .8s ease;position:fixed;display:-webkit-box;display:-ms-flexbox;display:flex;z-index:100;overflow:hidden;background:#fff;-webkit-box-shadow:5px 5px 7px #eee;box-shadow:5px 5px 7px #eee;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;will-change:contents}@media (min-width:800px){section#slide{height:100vh;left:0;top:0;width:50px}section#slide button{height:100vh;width:50px}section#slide.open{width:350px}}@media (max-width:799px){section#slide{width:100vw;left:0;top:0;height:50px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}section#slide button{width:100vw;height:50px}section#slide.open{height:350px}}section#slide nav{-webkit-transition:all .8s ease;transition:all .8s ease;opacity:0;visibility:hidden;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-item-align:center;align-self:center;width:0;height:0}@media (max-width:799px){section#slide nav{width:100%}}section#slide nav ul.menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;list-style:none;width:100%}section#slide nav ul.menu li{width:100%}section#slide nav ul.menu li a{width:100%}section#slide.open nav{-webkit-transition:all .8s ease;transition:all .8s ease;visibility:visible;opacity:1;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-line-pack:center;align-content:center;width:100%;height:auto}main#body{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-height:100vh}main#body>article{text-align:left;padding:2rem 4rem}main#body section#portfolio{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}main#body section#portfolio>article{text-align:left;max-width:450px;word-wrap:break-word}main#body ul.portfolio li{padding:4rem 0;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;width:100vw;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media (max-width:800px){main#body ul.portfolio li{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:wrap;flex-wrap:wrap}}main#body ul.portfolio li:nth-child(odd){-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}main#body ul.portfolio li:nth-child(even){-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse;background:#eee}main#body ul.portfolio li>a{-ms-flex-preferred-size:50%;flex-basis:50%;text-align:center}@media (max-width:800px){main#body ul.portfolio li>a{-ms-flex-preferred-size:100%;flex-basis:100%}}main#body ul.portfolio li>article{text-align:center;-ms-flex-preferred-size:50%;flex-basis:50%}main#body ul.portfolio li>article a{text-transform:none}@media (max-width:800px){main#body ul.portfolio li>article{-ms-flex-preferred-size:100%;flex-basis:100%}}main#body img{max-width:100%;display:block}main#body .mockup{text-align:center}main#body .mockup img{margin:0 auto}main#body .mockup img.keyboard{-webkit-filter:drop-shadow(0 5px 3px #969696);filter:drop-shadow(0 5px 3px #969696)}main#body .mockup img.screen{max-width:80%;background-size:cover;background-repeat:no-repeat;background-position:-10px 15px}@media (max-width:800px){main#body .mockup img.screen{background-position:-5px 7px}}ul.slideshow{list-style:none}ul.slideshow li{display:inline}@media (max-width:799px){main#body>article{text-align:left;padding:3rem 2rem 2rem 2rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
